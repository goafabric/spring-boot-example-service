apiVersion: batch/v1
kind: Job
metadata:
  name: ${_Values_app_name}
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 240
  template:
    metadata:
      annotations:
        linkerd.io/inject: ${_Values_linkerd_inject}
      labels:
        app: ${_Values_app_name}
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:13.1
          command: ['sh', '-c',
                    'until pg_isready -h ${_Values_root_name}-postgres -p 5432;
                     do echo waiting for database; sleep 2; done;']
      imagePullSecrets:
        - name: ${_Values_image_pullSecrets}
      containers:
        - name: ${_Values_app_name}
          image: "${_Values_image_repository}${_Values_server_arch}:${_Values_image_tag}"
          imagePullPolicy: IfNotPresent #Always
          envFrom:
            - configMapRef:
                name: ${_Values_app_name}-config
            - configMapRef:
                name: ${_Values_app_name}-config-log
            - secretRef:
                name: ${_Values_app_name}-config-external

          command: ["java", "-Xms${_Values_resources_requests_memory}", "-Xmx${_Values_resources_requests_memory}", "-Djava.security.egd=file:/dev/./urandom",
                    ${_Values_profiler_command}
                    "-cp", "/app/resources:/app/classes:/app/libs/*",
                    "${_Values_command}"]
          resources:
            requests:
              memory: "${_Values_resources_requests_memory}"
              cpu: "${_Values_resources_requests_cpu}"

          volumeMounts:
            - mountPath: /usr/share/logs
              name: ${_Values_app_name}-applogs
            - mountPath: /usr/share/config/
              name: ${_Values_app_name}-config-files-volume
            - mountPath: /usr/share/profiler
              name: ${_Values_app_name}-profiler-volume

      volumes:
        - name: ${_Values_app_name}-applogs
          emptyDir: {}
        - name: ${_Values_app_name}-config-files-volume
          configMap:
            name: ${_Values_app_name}-config-files
        - name: ${_Values_app_name}-profiler-volume
          ${_Values_volume_type_profiler}
          ${_Values_volume_path_profiler}