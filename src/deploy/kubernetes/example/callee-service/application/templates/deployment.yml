apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${_Values_app_name}
spec:
  selector:
    matchLabels:
      app: ${_Values_app_name}
  replicas: 1
  strategy:
    type: Recreate #RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: ${_Values_linkerd_inject}
      labels:
        app: ${_Values_app_name}
    spec:
      containers:
        - name: ${_Values_app_name}
          image: "${_Values_image_repository}${_Values_server_arch}:${_Values_image_tag}"
          imagePullPolicy: ${_Values_image_pullPolicy}
          ports:
            - name: transport
              containerPort: ${_Values_service_port}
              protocol: TCP
            - name: jmx
              containerPort: 1099
              protocol: TCP
          envFrom:
            - configMapRef:
                name: ${_Values_app_name}-config
            - configMapRef:
                name: ${_Values_app_name}-config-log
            - secretRef:
                name: ${_Values_app_name}-config-external

          command: ["java", "-Xms${_Values_resources_requests_memory}", "-Xmx${_Values_resources_requests_memory}",
                    "-Djava.security.egd=file:/dev/./urandom", "-cp", "/app/resources:/app/classes:/app/libs/*",
                    ${_Values_profiler_command}
                    "${_Values_command}"]
          resources:
            requests:
              memory: "${_Values_resources_requests_memory}"
              cpu: "${_Values_resources_requests_cpu}"

          readinessProbe:
            httpGet:
              path: /actuator/health
              port: transport
            initialDelaySeconds: ${_Values_readinessProbe_initialDelaySeconds}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: transport
            initialDelaySeconds: ${_Values_readinessProbe_initialDelaySeconds}
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

          volumeMounts:
            - mountPath: /usr/share/logs
              name: ${_Values_app_name}-applogs
            - mountPath: /usr/share/config/
              name: ${_Values_app_name}-config-files-volume
            - mountPath: /usr/share/profiler
              name: ${_Values_app_name}-profiler-volume

      volumes:
        - name: ${_Values_app_name}-applogs
          emptyDir: {}
        - name: ${_Values_app_name}-config-files-volume
          configMap:
            name: ${_Values_app_name}-config-files
        - name: ${_Values_app_name}-profiler-volume
          ${_Values_volume_type_profiler}
            ${_Values_volume_path_profiler}