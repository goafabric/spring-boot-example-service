events {
  worker_connections  4096;  ## Default: 1024
}

http {
    upstream example-service {
        server example-service-example-service-stack-1:50700;
#        server 192.168.1.19:50700;
    }

    server {
#        server_name my-awesome-server localhost;
        listen 80 default_server;

        listen 443 ssl;
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2; # Enable TLSv1.2, disable SSLv3.0, TLSv1.0 and TLSv1.1
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on; # The order of cipher suites matters

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        location /status {
          stub_status on;
          access_log   off;
        }

        location / {
#        location /example-1/ {
            proxy_pass http://example-service/;
        }

    }
}